{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { CONFIG_INITIAL } from \"../constants/ActionTypes\";\n\nconst configInitialRequest = async () => await undefined;\n\nfunction* config() {\n  try {\n    const signOutUser = yield call(configInitialRequest);\n\n    if (signOutUser === undefined) {\n      yield put(null);\n    } else {\n      yield put(null);\n    }\n  } catch (error) {\n    yield put(null);\n  }\n}\n\nexport function* configInitial() {\n  yield takeEvery(CONFIG_INITIAL, config);\n}\nexport default function* rootSaga() {\n  yield all([fork(configInitial)]);\n}","map":{"version":3,"sources":["/Users/isracarballo/Desktop/DEV REPO/Promotions/client/src/sagas/config.js"],"names":["all","call","fork","put","takeEvery","CONFIG_INITIAL","configInitialRequest","undefined","config","signOutUser","error","configInitial","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,oBAAoB,GAAG,YAAY,MAAMC,SAA/C;;AAEA,UAAUC,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMR,IAAI,CAACK,oBAAD,CAA9B;;AACA,QAAIG,WAAW,KAAKF,SAApB,EAA+B;AAC7B,YAAMJ,GAAG,CAAC,IAAD,CAAT;AACD,KAFD,MAEO;AACL,YAAMA,GAAG,CAAC,IAAD,CAAT;AACD;AACF,GAPD,CAOE,OAAOO,KAAP,EAAc;AACd,UAAMP,GAAG,CAAC,IAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUQ,aAAV,GAA0B;AAC/B,QAAMP,SAAS,CAACC,cAAD,EAAiBG,MAAjB,CAAf;AACD;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMZ,GAAG,CAAC,CAACE,IAAI,CAACS,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { CONFIG_INITIAL } from \"../constants/ActionTypes\";\n\nconst configInitialRequest = async () => await undefined;\n\nfunction* config() {\n  try {\n    const signOutUser = yield call(configInitialRequest);\n    if (signOutUser === undefined) {\n      yield put(null);\n    } else {\n      yield put(null);\n    }\n  } catch (error) {\n    yield put(null);\n  }\n}\n\nexport function* configInitial() {\n  yield takeEvery(CONFIG_INITIAL, config);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(configInitial)]);\n}\n"]},"metadata":{},"sourceType":"module"}