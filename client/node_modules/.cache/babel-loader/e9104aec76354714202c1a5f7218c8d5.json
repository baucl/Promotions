{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  const store = createStore(reducers(history), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"../reducers\", () => {\n      const nextRootReducer = require(\"../reducers\");\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/Users/isracarballo/Desktop/DEV REPO/Promotions/client/src/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","createBrowserHistory","routerMiddleware","createSagaMiddleware","rootSaga","history","routeMiddleware","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AACA,MAAMK,eAAe,GAAGJ,gBAAgB,CAACG,OAAD,CAAxC;AACA,MAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,EAAiBD,eAAjB,CAApB;AACA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cb,OAAxE;AAEA,eAAe,SAASc,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAMC,KAAK,GAAGf,WAAW,CACvBC,QAAQ,CAACK,OAAD,CADe,EAEvBQ,YAFuB,EAGvBJ,gBAAgB,CAACZ,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAHO,CAAzB;AAMAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBX,QAAnB;;AAEA,MAAIY,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,MAAM;AACrC,YAAMC,eAAe,GAAGC,OAAO,CAAC,aAAD,CAA/B;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AACD,SAAOL,KAAP;AACD;AACD,SAAST,OAAT","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\n\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    reducers(history),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"../reducers\", () => {\n      const nextRootReducer = require(\"../reducers\");\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\nexport { history };\n"]},"metadata":{},"sourceType":"module"}