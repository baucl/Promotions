{"ast":null,"code":"const getIdFromTable = (e, allPromotion) => {\n  let visible = false;\n  let dataResult = null;\n\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map(data => {\n      if (data.id === e.currentTarget.value) {\n        visible = data.Visible;\n        dataResult = data;\n        return;\n      }\n    });\n  }\n\n  return {\n    visible,\n    dataResult\n  };\n};\n\nconst handleEditPromotion = (e, allPromotion) => {\n  let dataResult = null;\n\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map(data => {\n      if (data.id === e.currentTarget.value) {\n        dataResult = data;\n        return;\n      }\n    });\n  }\n\n  return dataResult;\n};\n\nconst handleDeletePromotion = (e, allPromotion) => {\n  let id = null;\n  let promotionData = null;\n\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map(data => {\n      if (data.id === e.currentTarget.value) {\n        id = data.id;\n\n        if (data.Benefits !== null && data.Benefits.Image !== null) {\n          promotionData = data;\n        }\n\n        promotionData = data;\n        return;\n      }\n    });\n  }\n\n  return {\n    id,\n    promotionData\n  };\n};\n\nconst findHotSale = (data, allPromotion) => {\n  let hotSaleDisable = null;\n  let hotSaleEnable = null;\n\n  if (data !== null && allPromotion !== null && allPromotion.value.length > 0 && data.Visible) {\n    allPromotion.value.map(item => {\n      if (item.Visible && Date.parse(item.ExpirationDate) > new Date().getTime() && item.Schedules != null && item.Schedules[0].Enabled && item.Negocio === data.Negocio) {\n        hotSaleDisable = item;\n      }\n\n      if (item.id === data.id) {\n        hotSaleEnable = item;\n      }\n    });\n  }\n\n  return {\n    hotSaleDisable,\n    hotSaleEnable\n  };\n};\n\nconst EditType = inputType => {\n  var type = null;\n\n  switch (inputType) {\n    case \"Name\":\n      type = \"text\";\n      break;\n\n    case \"DateFrom\":\n      type = \"date\";\n      break;\n\n    case \"ExpirationDate\":\n      type = \"date\";\n      break;\n\n    default:\n      type = \"text\";\n      break;\n  }\n\n  return type;\n};\n\nexport { getIdFromTable, handleEditPromotion, handleDeletePromotion, findHotSale, EditType };","map":{"version":3,"sources":["/Users/isracarballo/Desktop/DEV REPO/Promotion-master/client/src/helpers/Estados/index.js"],"names":["getIdFromTable","e","allPromotion","visible","dataResult","value","length","map","data","id","currentTarget","Visible","handleEditPromotion","handleDeletePromotion","promotionData","Benefits","Image","findHotSale","hotSaleDisable","hotSaleEnable","item","Date","parse","ExpirationDate","getTime","Schedules","Enabled","Negocio","EditType","inputType","type"],"mappings":"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","sourcesContent":["const getIdFromTable = (e, allPromotion) => {\n  let visible = false;\n  let dataResult = null;\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map((data) => {\n      if (data.id === e.currentTarget.value) {\n        visible = data.Visible;\n        dataResult = data;\n        return;\n      }\n    });\n  }\n  return { visible, dataResult };\n};\n\nconst handleEditPromotion = (e, allPromotion) => {\n  let dataResult = null;\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map((data) => {\n      if (data.id === e.currentTarget.value) {\n        dataResult = data;\n        return;\n      }\n    });\n  }\n  return dataResult;\n};\n\nconst handleDeletePromotion = (e, allPromotion) => {\n  let id = null;\n  let promotionData = null;\n  if (allPromotion !== null && allPromotion.value.length > 0) {\n    allPromotion.value.map((data) => {\n      if (data.id === e.currentTarget.value) {\n        id = data.id;\n        if (data.Benefits !== null && data.Benefits.Image !== null) {\n          promotionData = data;\n        }\n        promotionData = data;\n        return;\n      }\n    });\n  }\n  return { id, promotionData };\n};\n\nconst findHotSale = (data, allPromotion) => {\n  let hotSaleDisable = null;\n  let hotSaleEnable = null;\n\n  if (\n    data !== null &&\n    allPromotion !== null &&\n    allPromotion.value.length > 0 &&\n    data.Visible\n  ) {\n    allPromotion.value.map((item) => {\n      if (\n        item.Visible &&\n        Date.parse(item.ExpirationDate) > new Date().getTime() &&\n        item.Schedules != null &&\n        item.Schedules[0].Enabled &&\n        item.Negocio === data.Negocio\n      ) {\n        hotSaleDisable = item;\n      }\n\n      if (item.id === data.id) {\n        hotSaleEnable = item;\n      }\n    });\n  }\n\n  return { hotSaleDisable, hotSaleEnable };\n};\n\nconst EditType = (inputType) => {\n  var type = null;\n  switch (inputType) {\n    case \"Name\":\n      type = \"text\";\n      break;\n    case \"DateFrom\":\n      type = \"date\";\n      break;\n    case \"ExpirationDate\":\n      type = \"date\";\n      break;\n    default:\n      type = \"text\";\n      break;\n  }\n  return type;\n};\n\nexport {\n  getIdFromTable,\n  handleEditPromotion,\n  handleDeletePromotion,\n  findHotSale,\n  EditType,\n};\n"]},"metadata":{},"sourceType":"module"}