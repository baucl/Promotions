{"ast":null,"code":"import { axiosAPI } from \"../helpers/axiosAPI\";\n\nconst controllerAutenticar = async data => {\n  try {\n    const response = await axiosAPI.post(\"/api/autenticar\", data);\n\n    if (response.data !== null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\"\n    };\n  }\n};\n\nconst controllerGetAllPromotions = async () => {\n  try {\n    const response = await axiosAPI.get(\"/api/allPromotion\");\n\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\"\n    };\n  }\n};\n\nconst controllerUpdatePromotion = async data => {\n  try {\n    const response = await axiosAPI.put(\"/api/updatePromotion\", data);\n\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\"\n    };\n  }\n};\n\nconst controllerDeletePromotion = async id => {\n  try {\n    const response = await axiosAPI.delete(`/api/DeletePromotion/${id}`);\n\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\"\n    };\n  }\n};\n\nconst controllerCreatePromotion = async data => {\n  try {\n    const response = await axiosAPI.post(\"/api/createPromotion\", data);\n\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\"\n    };\n  }\n};\n\nexport { controllerAutenticar, controllerGetAllPromotions, controllerUpdatePromotion, controllerDeletePromotion, controllerCreatePromotion };","map":{"version":3,"sources":["/Users/isracarballo/Desktop/DEV REPO/Promotion-master/client/src/services/service.js"],"names":["axiosAPI","controllerAutenticar","data","response","post","error","success","message","controllerGetAllPromotions","get","controllerUpdatePromotion","put","controllerDeletePromotion","id","delete","controllerCreatePromotion"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,oBAAoB,GAAG,MAAOC,IAAP,IAAgB;AAC3C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,iBAAd,EAAiCF,IAAjC,CAAvB;;AACA,QAAIC,QAAQ,CAACD,IAAT,KAAkB,IAAtB,EAA4B;AAC1B,aAAOC,QAAQ,CAACD,IAAhB;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CAZD;;AAcA,MAAMC,0BAA0B,GAAG,YAAY;AAC7C,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMH,QAAQ,CAACS,GAAT,CAAa,mBAAb,CAAvB;;AACA,QAAIN,QAAQ,CAACD,IAAT,IAAiB,IAArB,EAA2B;AACzB,aAAOC,QAAQ,CAACD,IAAhB;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CAZD;;AAcA,MAAMG,yBAAyB,GAAG,MAAOR,IAAP,IAAgB;AAChD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACW,GAAT,CAAa,sBAAb,EAAqCT,IAArC,CAAvB;;AACA,QAAIC,QAAQ,CAACD,IAAT,IAAiB,IAArB,EAA2B;AACzB,aAAOC,QAAQ,CAACD,IAAhB;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CAZD;;AAcA,MAAMK,yBAAyB,GAAG,MAAOC,EAAP,IAAc;AAC9C,MAAI;AACF,UAAMV,QAAQ,GAAG,MAAMH,QAAQ,CAACc,MAAT,CAAiB,wBAAuBD,EAAG,EAA3C,CAAvB;;AACA,QAAIV,QAAQ,CAACD,IAAT,IAAiB,IAArB,EAA2B;AACzB,aAAOC,QAAQ,CAACD,IAAhB;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CAZD;;AAcA,MAAMQ,yBAAyB,GAAG,MAAOb,IAAP,IAAgB;AAChD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,sBAAd,EAAsCF,IAAtC,CAAvB;;AACA,QAAIC,QAAQ,CAACD,IAAT,IAAiB,IAArB,EAA2B;AACzB,aAAOC,QAAQ,CAACD,IAAhB;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF,CAZD;;AAcA,SACEN,oBADF,EAEEO,0BAFF,EAGEE,yBAHF,EAIEE,yBAJF,EAKEG,yBALF","sourcesContent":["import { axiosAPI } from \"../helpers/axiosAPI\";\n\nconst controllerAutenticar = async (data) => {\n  try {\n    const response = await axiosAPI.post(\"/api/autenticar\", data);\n    if (response.data !== null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\",\n    };\n  }\n};\n\nconst controllerGetAllPromotions = async () => {\n  try {\n    const response = await axiosAPI.get(\"/api/allPromotion\");\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\",\n    };\n  }\n};\n\nconst controllerUpdatePromotion = async (data) => {\n  try {\n    const response = await axiosAPI.put(\"/api/updatePromotion\", data);\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\",\n    };\n  }\n};\n\nconst controllerDeletePromotion = async (id) => {\n  try {\n    const response = await axiosAPI.delete(`/api/DeletePromotion/${id}`);\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\",\n    };\n  }\n};\n\nconst controllerCreatePromotion = async (data) => {\n  try {\n    const response = await axiosAPI.post(\"/api/createPromotion\", data);\n    if (response.data != null) {\n      return response.data;\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: \"No se ha podido establecer la conexion\",\n    };\n  }\n};\n\nexport {\n  controllerAutenticar,\n  controllerGetAllPromotions,\n  controllerUpdatePromotion,\n  controllerDeletePromotion,\n  controllerCreatePromotion,\n};\n"]},"metadata":{},"sourceType":"module"}